{"ast":null,"code":"var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\n\nfunction notEmptyString(input) {\n  return input !== '';\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\n\n\nfunction splitOnASCIIWhitespace(input) {\n  // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n  return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n}\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\n\n\nfunction orderedSetReducer(current, element) {\n  if (!current.hasOwnProperty(element)) {\n    current[element] = true;\n  }\n\n  return current;\n}\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\n\n\nfunction toOrderedSet(input) {\n  if (!input) return [];\n  var list = splitOnASCIIWhitespace(input);\n  return Object.keys(list.reduce(orderedSetReducer, {}));\n}\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\n\n\nfunction arrayIncludes(list) {\n  return function (element) {\n    return list && list.indexOf(element) !== -1;\n  };\n}\n\nfunction copy(src, dest) {\n  for (var p in src) {\n    if (Object.prototype.hasOwnProperty.call(src, p)) {\n      dest[p] = src[p];\n    }\n  }\n}\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\n\n\nfunction _extends(Class, Super) {\n  var pt = Class.prototype;\n\n  if (!(pt instanceof Super)) {\n    var t = function t() {};\n\n    ;\n    t.prototype = Super.prototype;\n    t = new t();\n    copy(pt, t);\n    Class.prototype = pt = t;\n  }\n\n  if (pt.constructor != Class) {\n    if (typeof Class != 'function') {\n      console.error(\"unknown Class:\" + Class);\n    }\n\n    pt.constructor = Class;\n  }\n} // Node Types\n\n\nvar NodeType = {};\nvar ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\nvar ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\nvar TEXT_NODE = NodeType.TEXT_NODE = 3;\nvar CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\nvar ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\nvar ENTITY_NODE = NodeType.ENTITY_NODE = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE = NodeType.COMMENT_NODE = 8;\nvar DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\nvar DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\nvar DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\nvar NOTATION_NODE = NodeType.NOTATION_NODE = 12; // ExceptionCode\n\nvar ExceptionCode = {};\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR = ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\nvar DOMSTRING_SIZE_ERR = ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\nvar HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\nvar WRONG_DOCUMENT_ERR = ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\nvar INVALID_CHARACTER_ERR = ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\nvar NO_DATA_ALLOWED_ERR = ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\nvar NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\nvar NOT_SUPPORTED_ERR = ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\nvar INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10); //level2\n\nvar INVALID_STATE_ERR = ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\nvar SYNTAX_ERR = ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\nvar INVALID_MODIFICATION_ERR = ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\nvar NAMESPACE_ERR = ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\nvar INVALID_ACCESS_ERR = ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\n\nfunction DOMException(code, message) {\n  if (message instanceof Error) {\n    var error = message;\n  } else {\n    error = this;\n    Error.call(this, ExceptionMessage[code]);\n    this.message = ExceptionMessage[code];\n    if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n  }\n\n  error.code = code;\n  if (message) this.message = this.message + \": \" + message;\n  return error;\n}\n\n;\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode, DOMException);\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\n\nfunction NodeList() {}\n\n;\nNodeList.prototype = {\n  /**\n   * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n   * @standard level1\n   */\n  length: 0,\n\n  /**\n   * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n   * @standard level1\n   * @param index  unsigned long\n   *   Index into the collection.\n   * @return Node\n   * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n   */\n  item: function item(index) {\n    return this[index] || null;\n  },\n  toString: function toString(isHTML, nodeFilter) {\n    for (var buf = [], i = 0; i < this.length; i++) {\n      serializeToString(this[i], buf, isHTML, nodeFilter);\n    }\n\n    return buf.join('');\n  },\n\n  /**\n   * @private\n   * @param {function (Node):boolean} predicate\n   * @returns {Node[]}\n   */\n  filter: function filter(predicate) {\n    return Array.prototype.filter.call(this, predicate);\n  },\n\n  /**\n   * @private\n   * @param {Node} item\n   * @returns {number}\n   */\n  indexOf: function indexOf(item) {\n    return Array.prototype.indexOf.call(this, item);\n  }\n};\n\nfunction LiveNodeList(node, refresh) {\n  this._node = node;\n  this._refresh = refresh;\n\n  _updateLiveList(this);\n}\n\nfunction _updateLiveList(list) {\n  var inc = list._node._inc || list._node.ownerDocument._inc;\n\n  if (list._inc != inc) {\n    var ls = list._refresh(list._node); //console.log(ls.length)\n\n\n    __set__(list, 'length', ls.length);\n\n    copy(ls, list);\n    list._inc = inc;\n  }\n}\n\nLiveNodeList.prototype.item = function (i) {\n  _updateLiveList(this);\n\n  return this[i];\n};\n\n_extends(LiveNodeList, NodeList);\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\n\n\nfunction NamedNodeMap() {}\n\n;\n\nfunction _findNodeIndex(list, node) {\n  var i = list.length;\n\n  while (i--) {\n    if (list[i] === node) {\n      return i;\n    }\n  }\n}\n\nfunction _addNamedNode(el, list, newAttr, oldAttr) {\n  if (oldAttr) {\n    list[_findNodeIndex(list, oldAttr)] = newAttr;\n  } else {\n    list[list.length++] = newAttr;\n  }\n\n  if (el) {\n    newAttr.ownerElement = el;\n    var doc = el.ownerDocument;\n\n    if (doc) {\n      oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n\n      _onAddAttribute(doc, el, newAttr);\n    }\n  }\n}\n\nfunction _removeNamedNode(el, list, attr) {\n  //console.log('remove attr:'+attr)\n  var i = _findNodeIndex(list, attr);\n\n  if (i >= 0) {\n    var lastIndex = list.length - 1;\n\n    while (i < lastIndex) {\n      list[i] = list[++i];\n    }\n\n    list.length = lastIndex;\n\n    if (el) {\n      var doc = el.ownerDocument;\n\n      if (doc) {\n        _onRemoveAttribute(doc, el, attr);\n\n        attr.ownerElement = null;\n      }\n    }\n  } else {\n    throw new DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n  }\n}\n\nNamedNodeMap.prototype = {\n  length: 0,\n  item: NodeList.prototype.item,\n  getNamedItem: function getNamedItem(key) {\n    //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n    //\t\t\treturn null;\n    //\t\t}\n    //console.log()\n    var i = this.length;\n\n    while (i--) {\n      var attr = this[i]; //console.log(attr.nodeName,key)\n\n      if (attr.nodeName == key) {\n        return attr;\n      }\n    }\n  },\n  setNamedItem: function setNamedItem(attr) {\n    var el = attr.ownerElement;\n\n    if (el && el != this._ownerElement) {\n      throw new DOMException(INUSE_ATTRIBUTE_ERR);\n    }\n\n    var oldAttr = this.getNamedItem(attr.nodeName);\n\n    _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n    return oldAttr;\n  },\n\n  /* returns Node */\n  setNamedItemNS: function setNamedItemNS(attr) {\n    // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n    var el = attr.ownerElement,\n        oldAttr;\n\n    if (el && el != this._ownerElement) {\n      throw new DOMException(INUSE_ATTRIBUTE_ERR);\n    }\n\n    oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n\n    _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n    return oldAttr;\n  },\n\n  /* returns Node */\n  removeNamedItem: function removeNamedItem(key) {\n    var attr = this.getNamedItem(key);\n\n    _removeNamedNode(this._ownerElement, this, attr);\n\n    return attr;\n  },\n  // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n  //for level2\n  removeNamedItemNS: function removeNamedItemNS(namespaceURI, localName) {\n    var attr = this.getNamedItemNS(namespaceURI, localName);\n\n    _removeNamedNode(this._ownerElement, this, attr);\n\n    return attr;\n  },\n  getNamedItemNS: function getNamedItemNS(namespaceURI, localName) {\n    var i = this.length;\n\n    while (i--) {\n      var node = this[i];\n\n      if (node.localName == localName && node.namespaceURI == namespaceURI) {\n        return node;\n      }\n    }\n\n    return null;\n  }\n};\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\n\nfunction DOMImplementation() {}\n\nDOMImplementation.prototype = {\n  /**\n   * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n   * The different implementations fairly diverged in what kind of features were reported.\n   * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n   *\n   * @deprecated It is deprecated and modern browsers return true in all cases.\n   *\n   * @param {string} feature\n   * @param {string} [version]\n   * @returns {boolean} always true\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n   */\n  hasFeature: function hasFeature(feature, version) {\n    return true;\n  },\n\n  /**\n   * Creates an XML Document object of the specified type with its document element.\n   *\n   * __It behaves slightly different from the description in the living standard__:\n   * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n   * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n   * - this implementation is not validating names or qualified names\n   *   (when parsing XML strings, the SAX parser takes care of that)\n   *\n   * @param {string|null} namespaceURI\n   * @param {string} qualifiedName\n   * @param {DocumentType=null} doctype\n   * @returns {Document}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n   *\n   * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n   * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n   * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n   */\n  createDocument: function createDocument(namespaceURI, qualifiedName, doctype) {\n    var doc = new Document();\n    doc.implementation = this;\n    doc.childNodes = new NodeList();\n    doc.doctype = doctype || null;\n\n    if (doctype) {\n      doc.appendChild(doctype);\n    }\n\n    if (qualifiedName) {\n      var root = doc.createElementNS(namespaceURI, qualifiedName);\n      doc.appendChild(root);\n    }\n\n    return doc;\n  },\n\n  /**\n   * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n   *\n   * __This behavior is slightly different from the in the specs__:\n   * - this implementation is not validating names or qualified names\n   *   (when parsing XML strings, the SAX parser takes care of that)\n   *\n   * @param {string} qualifiedName\n   * @param {string} [publicId]\n   * @param {string} [systemId]\n   * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n   * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n   *\n   * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n   * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n   * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n   */\n  createDocumentType: function createDocumentType(qualifiedName, publicId, systemId) {\n    var node = new DocumentType();\n    node.name = qualifiedName;\n    node.nodeName = qualifiedName;\n    node.publicId = publicId || '';\n    node.systemId = systemId || '';\n    return node;\n  }\n};\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {}\n\n;\nNode.prototype = {\n  firstChild: null,\n  lastChild: null,\n  previousSibling: null,\n  nextSibling: null,\n  attributes: null,\n  parentNode: null,\n  childNodes: null,\n  ownerDocument: null,\n  nodeValue: null,\n  namespaceURI: null,\n  prefix: null,\n  localName: null,\n  // Modified in DOM Level 2:\n  insertBefore: function insertBefore(newChild, refChild) {\n    //raises\n    return _insertBefore(this, newChild, refChild);\n  },\n  replaceChild: function replaceChild(newChild, oldChild) {\n    //raises\n    _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\n    if (oldChild) {\n      this.removeChild(oldChild);\n    }\n  },\n  removeChild: function removeChild(oldChild) {\n    return _removeChild(this, oldChild);\n  },\n  appendChild: function appendChild(newChild) {\n    return this.insertBefore(newChild, null);\n  },\n  hasChildNodes: function hasChildNodes() {\n    return this.firstChild != null;\n  },\n  cloneNode: function cloneNode(deep) {\n    return _cloneNode(this.ownerDocument || this, this, deep);\n  },\n  // Modified in DOM Level 2:\n  normalize: function normalize() {\n    var child = this.firstChild;\n\n    while (child) {\n      var next = child.nextSibling;\n\n      if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n        this.removeChild(next);\n        child.appendData(next.data);\n      } else {\n        child.normalize();\n        child = next;\n      }\n    }\n  },\n  // Introduced in DOM Level 2:\n  isSupported: function isSupported(feature, version) {\n    return this.ownerDocument.implementation.hasFeature(feature, version);\n  },\n  // Introduced in DOM Level 2:\n  hasAttributes: function hasAttributes() {\n    return this.attributes.length > 0;\n  },\n\n  /**\n   * Look up the prefix associated to the given namespace URI, starting from this node.\n   * **The default namespace declarations are ignored by this method.**\n   * See Namespace Prefix Lookup for details on the algorithm used by this method.\n   *\n   * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n   *\n   * @param {string | null} namespaceURI\n   * @returns {string | null}\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n   * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n   * @see https://github.com/xmldom/xmldom/issues/322\n   */\n  lookupPrefix: function lookupPrefix(namespaceURI) {\n    var el = this;\n\n    while (el) {\n      var map = el._nsMap; //console.dir(map)\n\n      if (map) {\n        for (var n in map) {\n          if (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n            return n;\n          }\n        }\n      }\n\n      el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n    }\n\n    return null;\n  },\n  // Introduced in DOM Level 3:\n  lookupNamespaceURI: function lookupNamespaceURI(prefix) {\n    var el = this;\n\n    while (el) {\n      var map = el._nsMap; //console.dir(map)\n\n      if (map) {\n        if (prefix in map) {\n          if (Object.prototype.hasOwnProperty.call(map, prefix)) {\n            return map[prefix];\n          }\n        }\n      }\n\n      el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n    }\n\n    return null;\n  },\n  // Introduced in DOM Level 3:\n  isDefaultNamespace: function isDefaultNamespace(namespaceURI) {\n    var prefix = this.lookupPrefix(namespaceURI);\n    return prefix == null;\n  }\n};\n\nfunction _xmlEncoder(c) {\n  return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n}\n\ncopy(NodeType, Node);\ncopy(NodeType, Node.prototype);\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\n\nfunction _visitNode(node, callback) {\n  if (callback(node)) {\n    return true;\n  }\n\n  if (node = node.firstChild) {\n    do {\n      if (_visitNode(node, callback)) {\n        return true;\n      }\n    } while (node = node.nextSibling);\n  }\n}\n\nfunction Document() {\n  this.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc, el, newAttr) {\n  doc && doc._inc++;\n  var ns = newAttr.namespaceURI;\n\n  if (ns === NAMESPACE.XMLNS) {\n    //update namespace\n    el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n  }\n}\n\nfunction _onRemoveAttribute(doc, el, newAttr, remove) {\n  doc && doc._inc++;\n  var ns = newAttr.namespaceURI;\n\n  if (ns === NAMESPACE.XMLNS) {\n    //update namespace\n    delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n  }\n}\n\nfunction _onUpdateChild(doc, el, newChild) {\n  if (doc && doc._inc) {\n    doc._inc++; //update childNodes\n\n    var cs = el.childNodes;\n\n    if (newChild) {\n      cs[cs.length++] = newChild;\n    } else {\n      //console.log(1)\n      var child = el.firstChild;\n      var i = 0;\n\n      while (child) {\n        cs[i++] = child;\n        child = child.nextSibling;\n      }\n\n      cs.length = i;\n      delete cs[cs.length];\n    }\n  }\n}\n/**\n * attributes;\n * children;\n *\n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\n\n\nfunction _removeChild(parentNode, child) {\n  var previous = child.previousSibling;\n  var next = child.nextSibling;\n\n  if (previous) {\n    previous.nextSibling = next;\n  } else {\n    parentNode.firstChild = next;\n  }\n\n  if (next) {\n    next.previousSibling = previous;\n  } else {\n    parentNode.lastChild = previous;\n  }\n\n  child.parentNode = null;\n  child.previousSibling = null;\n  child.nextSibling = null;\n\n  _onUpdateChild(parentNode.ownerDocument, parentNode);\n\n  return child;\n}\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\n\n\nfunction hasValidParentNodeType(node) {\n  return node && (node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE);\n}\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\n\n\nfunction hasInsertableNodeType(node) {\n  return node && (isElementNode(node) || isTextNode(node) || isDocTypeNode(node) || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.COMMENT_NODE || node.nodeType === Node.PROCESSING_INSTRUCTION_NODE);\n}\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\n\n\nfunction isDocTypeNode(node) {\n  return node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\n\n\nfunction isElementNode(node) {\n  return node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\n\n\nfunction isTextNode(node) {\n  return node && node.nodeType === Node.TEXT_NODE;\n}\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\n\n\nfunction isElementInsertionPossible(doc, child) {\n  var parentChildNodes = doc.childNodes || [];\n\n  if (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n    return false;\n  }\n\n  var docTypeNode = find(parentChildNodes, isDocTypeNode);\n  return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\n\n\nfunction isElementReplacementPossible(doc, child) {\n  var parentChildNodes = doc.childNodes || [];\n\n  function hasElementChildThatIsNotChild(node) {\n    return isElementNode(node) && node !== child;\n  }\n\n  if (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n    return false;\n  }\n\n  var docTypeNode = find(parentChildNodes, isDocTypeNode);\n  return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\n\n\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n  // 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n  if (!hasValidParentNodeType(parent)) {\n    throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n  } // 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n  // not implemented!\n  // 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\n\n  if (child && child.parentNode !== parent) {\n    throw new DOMException(NOT_FOUND_ERR, 'child not in parent');\n  }\n\n  if ( // 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n  !hasInsertableNodeType(node) || // 5. If either `node` is a Text node and `parent` is a document,\n  // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n  // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n  // or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n  isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE) {\n    throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType);\n  }\n}\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\n\n\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n  var parentChildNodes = parent.childNodes || [];\n  var nodeChildNodes = node.childNodes || []; // DocumentFragment\n\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    var nodeChildElements = nodeChildNodes.filter(isElementNode); // If node has more than one element child or has a Text node child.\n\n    if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n    } // Otherwise, if `node` has one element child and either `parent` has an element child,\n    // `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\n\n    if (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n    }\n  } // Element\n\n\n  if (isElementNode(node)) {\n    // `parent` has an element child, `child` is a doctype,\n    // or `child` is non-null and a doctype is following `child`.\n    if (!isElementInsertionPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n    }\n  } // DocumentType\n\n\n  if (isDocTypeNode(node)) {\n    // `parent` has a doctype child,\n    if (find(parentChildNodes, isDocTypeNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n    }\n\n    var parentElementChild = find(parentChildNodes, isElementNode); // `child` is non-null and an element is preceding `child`,\n\n    if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n    } // or `child` is null and `parent` has an element child.\n\n\n    if (!child && parentElementChild) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n    }\n  }\n}\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\n\n\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n  var parentChildNodes = parent.childNodes || [];\n  var nodeChildNodes = node.childNodes || []; // DocumentFragment\n\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    var nodeChildElements = nodeChildNodes.filter(isElementNode); // If `node` has more than one element child or has a Text node child.\n\n    if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n    } // Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\n\n    if (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n    }\n  } // Element\n\n\n  if (isElementNode(node)) {\n    // `parent` has an element child that is not `child` or a doctype is following `child`.\n    if (!isElementReplacementPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n    }\n  } // DocumentType\n\n\n  if (isDocTypeNode(node)) {\n    var hasDoctypeChildThatIsNotChild = function hasDoctypeChildThatIsNotChild(node) {\n      return isDocTypeNode(node) && node !== child;\n    }; // `parent` has a doctype child that is not `child`,\n\n\n    if (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n    }\n\n    var parentElementChild = find(parentChildNodes, isElementNode); // or an element is preceding `child`.\n\n    if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n    }\n  }\n}\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\n\n\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n  // To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n  assertPreInsertionValidity1to5(parent, node, child); // If parent is a document, and any of the statements below, switched on the interface node implements,\n  // are true, then throw a \"HierarchyRequestError\" DOMException.\n\n  if (parent.nodeType === Node.DOCUMENT_NODE) {\n    (_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n  }\n\n  var cp = node.parentNode;\n\n  if (cp) {\n    cp.removeChild(node); //remove and update\n  }\n\n  if (node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n    var newFirst = node.firstChild;\n\n    if (newFirst == null) {\n      return node;\n    }\n\n    var newLast = node.lastChild;\n  } else {\n    newFirst = newLast = node;\n  }\n\n  var pre = child ? child.previousSibling : parent.lastChild;\n  newFirst.previousSibling = pre;\n  newLast.nextSibling = child;\n\n  if (pre) {\n    pre.nextSibling = newFirst;\n  } else {\n    parent.firstChild = newFirst;\n  }\n\n  if (child == null) {\n    parent.lastChild = newLast;\n  } else {\n    child.previousSibling = newLast;\n  }\n\n  do {\n    newFirst.parentNode = parent;\n  } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n\n  _onUpdateChild(parent.ownerDocument || parent, parent); //console.log(parent.lastChild.nextSibling == null)\n\n\n  if (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n    node.firstChild = node.lastChild = null;\n  }\n\n  return node;\n}\n\nfunction _appendSingleChild(parentNode, newChild) {\n  if (newChild.parentNode) {\n    newChild.parentNode.removeChild(newChild);\n  }\n\n  newChild.parentNode = parentNode;\n  newChild.previousSibling = parentNode.lastChild;\n  newChild.nextSibling = null;\n\n  if (newChild.previousSibling) {\n    newChild.previousSibling.nextSibling = newChild;\n  } else {\n    parentNode.firstChild = newChild;\n  }\n\n  parentNode.lastChild = newChild;\n\n  _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\n  return newChild;\n}\n\nDocument.prototype = {\n  //implementation : null,\n  nodeName: '#document',\n  nodeType: DOCUMENT_NODE,\n\n  /**\n   * The DocumentType node of the document.\n   *\n   * @readonly\n   * @type DocumentType\n   */\n  doctype: null,\n  documentElement: null,\n  _inc: 1,\n  insertBefore: function insertBefore(newChild, refChild) {\n    //raises\n    if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      var child = newChild.firstChild;\n\n      while (child) {\n        var next = child.nextSibling;\n        this.insertBefore(child, refChild);\n        child = next;\n      }\n\n      return newChild;\n    }\n\n    _insertBefore(this, newChild, refChild);\n\n    newChild.ownerDocument = this;\n\n    if (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n      this.documentElement = newChild;\n    }\n\n    return newChild;\n  },\n  removeChild: function removeChild(oldChild) {\n    if (this.documentElement == oldChild) {\n      this.documentElement = null;\n    }\n\n    return _removeChild(this, oldChild);\n  },\n  replaceChild: function replaceChild(newChild, oldChild) {\n    //raises\n    _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\n    newChild.ownerDocument = this;\n\n    if (oldChild) {\n      this.removeChild(oldChild);\n    }\n\n    if (isElementNode(newChild)) {\n      this.documentElement = newChild;\n    }\n  },\n  // Introduced in DOM Level 2:\n  importNode: function importNode(importedNode, deep) {\n    return _importNode(this, importedNode, deep);\n  },\n  // Introduced in DOM Level 2:\n  getElementById: function getElementById(id) {\n    var rtv = null;\n\n    _visitNode(this.documentElement, function (node) {\n      if (node.nodeType == ELEMENT_NODE) {\n        if (node.getAttribute('id') == id) {\n          rtv = node;\n          return true;\n        }\n      }\n    });\n\n    return rtv;\n  },\n\n  /**\n   * The `getElementsByClassName` method of `Document` interface returns an array-like object\n   * of all child elements which have **all** of the given class name(s).\n   *\n   * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n   *\n   *\n   * Warning: This is a live LiveNodeList.\n   * Changes in the DOM will reflect in the array as the changes occur.\n   * If an element selected by this array no longer qualifies for the selector,\n   * it will automatically be removed. Be aware of this for iteration purposes.\n   *\n   * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n   * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n   */\n  getElementsByClassName: function getElementsByClassName(classNames) {\n    var classNamesSet = toOrderedSet(classNames);\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n\n      if (classNamesSet.length > 0) {\n        _visitNode(base.documentElement, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE) {\n            var nodeClassNames = node.getAttribute('class'); // can be null if the attribute does not exist\n\n            if (nodeClassNames) {\n              // before splitting and iterating just compare them for the most common case\n              var matches = classNames === nodeClassNames;\n\n              if (!matches) {\n                var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n              }\n\n              if (matches) {\n                ls.push(node);\n              }\n            }\n          }\n        });\n      }\n\n      return ls;\n    });\n  },\n  //document factory method:\n  createElement: function createElement(tagName) {\n    var node = new Element();\n    node.ownerDocument = this;\n    node.nodeName = tagName;\n    node.tagName = tagName;\n    node.localName = tagName;\n    node.childNodes = new NodeList();\n    var attrs = node.attributes = new NamedNodeMap();\n    attrs._ownerElement = node;\n    return node;\n  },\n  createDocumentFragment: function createDocumentFragment() {\n    var node = new DocumentFragment();\n    node.ownerDocument = this;\n    node.childNodes = new NodeList();\n    return node;\n  },\n  createTextNode: function createTextNode(data) {\n    var node = new Text();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createComment: function createComment(data) {\n    var node = new Comment();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createCDATASection: function createCDATASection(data) {\n    var node = new CDATASection();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createProcessingInstruction: function createProcessingInstruction(target, data) {\n    var node = new ProcessingInstruction();\n    node.ownerDocument = this;\n    node.tagName = node.target = target;\n    node.nodeValue = node.data = data;\n    return node;\n  },\n  createAttribute: function createAttribute(name) {\n    var node = new Attr();\n    node.ownerDocument = this;\n    node.name = name;\n    node.nodeName = name;\n    node.localName = name;\n    node.specified = true;\n    return node;\n  },\n  createEntityReference: function createEntityReference(name) {\n    var node = new EntityReference();\n    node.ownerDocument = this;\n    node.nodeName = name;\n    return node;\n  },\n  // Introduced in DOM Level 2:\n  createElementNS: function createElementNS(namespaceURI, qualifiedName) {\n    var node = new Element();\n    var pl = qualifiedName.split(':');\n    var attrs = node.attributes = new NamedNodeMap();\n    node.childNodes = new NodeList();\n    node.ownerDocument = this;\n    node.nodeName = qualifiedName;\n    node.tagName = qualifiedName;\n    node.namespaceURI = namespaceURI;\n\n    if (pl.length == 2) {\n      node.prefix = pl[0];\n      node.localName = pl[1];\n    } else {\n      //el.prefix = null;\n      node.localName = qualifiedName;\n    }\n\n    attrs._ownerElement = node;\n    return node;\n  },\n  // Introduced in DOM Level 2:\n  createAttributeNS: function createAttributeNS(namespaceURI, qualifiedName) {\n    var node = new Attr();\n    var pl = qualifiedName.split(':');\n    node.ownerDocument = this;\n    node.nodeName = qualifiedName;\n    node.name = qualifiedName;\n    node.namespaceURI = namespaceURI;\n    node.specified = true;\n\n    if (pl.length == 2) {\n      node.prefix = pl[0];\n      node.localName = pl[1];\n    } else {\n      //el.prefix = null;\n      node.localName = qualifiedName;\n    }\n\n    return node;\n  }\n};\n\n_extends(Document, Node);\n\nfunction Element() {\n  this._nsMap = {};\n}\n\n;\nElement.prototype = {\n  nodeType: ELEMENT_NODE,\n  hasAttribute: function hasAttribute(name) {\n    return this.getAttributeNode(name) != null;\n  },\n  getAttribute: function getAttribute(name) {\n    var attr = this.getAttributeNode(name);\n    return attr && attr.value || '';\n  },\n  getAttributeNode: function getAttributeNode(name) {\n    return this.attributes.getNamedItem(name);\n  },\n  setAttribute: function setAttribute(name, value) {\n    var attr = this.ownerDocument.createAttribute(name);\n    attr.value = attr.nodeValue = \"\" + value;\n    this.setAttributeNode(attr);\n  },\n  removeAttribute: function removeAttribute(name) {\n    var attr = this.getAttributeNode(name);\n    attr && this.removeAttributeNode(attr);\n  },\n  //four real opeartion method\n  appendChild: function appendChild(newChild) {\n    if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return this.insertBefore(newChild, null);\n    } else {\n      return _appendSingleChild(this, newChild);\n    }\n  },\n  setAttributeNode: function setAttributeNode(newAttr) {\n    return this.attributes.setNamedItem(newAttr);\n  },\n  setAttributeNodeNS: function setAttributeNodeNS(newAttr) {\n    return this.attributes.setNamedItemNS(newAttr);\n  },\n  removeAttributeNode: function removeAttributeNode(oldAttr) {\n    //console.log(this == oldAttr.ownerElement)\n    return this.attributes.removeNamedItem(oldAttr.nodeName);\n  },\n  //get real attribute name,and remove it by removeAttributeNode\n  removeAttributeNS: function removeAttributeNS(namespaceURI, localName) {\n    var old = this.getAttributeNodeNS(namespaceURI, localName);\n    old && this.removeAttributeNode(old);\n  },\n  hasAttributeNS: function hasAttributeNS(namespaceURI, localName) {\n    return this.getAttributeNodeNS(namespaceURI, localName) != null;\n  },\n  getAttributeNS: function getAttributeNS(namespaceURI, localName) {\n    var attr = this.getAttributeNodeNS(namespaceURI, localName);\n    return attr && attr.value || '';\n  },\n  setAttributeNS: function setAttributeNS(namespaceURI, qualifiedName, value) {\n    var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n    attr.value = attr.nodeValue = \"\" + value;\n    this.setAttributeNode(attr);\n  },\n  getAttributeNodeNS: function getAttributeNodeNS(namespaceURI, localName) {\n    return this.attributes.getNamedItemNS(namespaceURI, localName);\n  },\n  getElementsByTagName: function getElementsByTagName(tagName) {\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n\n      _visitNode(base, function (node) {\n        if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n          ls.push(node);\n        }\n      });\n\n      return ls;\n    });\n  },\n  getElementsByTagNameNS: function getElementsByTagNameNS(namespaceURI, localName) {\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n\n      _visitNode(base, function (node) {\n        if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n          ls.push(node);\n        }\n      });\n\n      return ls;\n    });\n  }\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n_extends(Element, Node);\n\nfunction Attr() {}\n\n;\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n\n_extends(Attr, Node);\n\nfunction CharacterData() {}\n\n;\nCharacterData.prototype = {\n  data: '',\n  substringData: function substringData(offset, count) {\n    return this.data.substring(offset, offset + count);\n  },\n  appendData: function appendData(text) {\n    text = this.data + text;\n    this.nodeValue = this.data = text;\n    this.length = text.length;\n  },\n  insertData: function insertData(offset, text) {\n    this.replaceData(offset, 0, text);\n  },\n  appendChild: function appendChild(newChild) {\n    throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n  },\n  deleteData: function deleteData(offset, count) {\n    this.replaceData(offset, count, \"\");\n  },\n  replaceData: function replaceData(offset, count, text) {\n    var start = this.data.substring(0, offset);\n    var end = this.data.substring(offset + count);\n    text = start + text + end;\n    this.nodeValue = this.data = text;\n    this.length = text.length;\n  }\n};\n\n_extends(CharacterData, Node);\n\nfunction Text() {}\n\n;\nText.prototype = {\n  nodeName: \"#text\",\n  nodeType: TEXT_NODE,\n  splitText: function splitText(offset) {\n    var text = this.data;\n    var newText = text.substring(offset);\n    text = text.substring(0, offset);\n    this.data = this.nodeValue = text;\n    this.length = text.length;\n    var newNode = this.ownerDocument.createTextNode(newText);\n\n    if (this.parentNode) {\n      this.parentNode.insertBefore(newNode, this.nextSibling);\n    }\n\n    return newNode;\n  }\n};\n\n_extends(Text, CharacterData);\n\nfunction Comment() {}\n\n;\nComment.prototype = {\n  nodeName: \"#comment\",\n  nodeType: COMMENT_NODE\n};\n\n_extends(Comment, CharacterData);\n\nfunction CDATASection() {}\n\n;\nCDATASection.prototype = {\n  nodeName: \"#cdata-section\",\n  nodeType: CDATA_SECTION_NODE\n};\n\n_extends(CDATASection, CharacterData);\n\nfunction DocumentType() {}\n\n;\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n\n_extends(DocumentType, Node);\n\nfunction Notation() {}\n\n;\nNotation.prototype.nodeType = NOTATION_NODE;\n\n_extends(Notation, Node);\n\nfunction Entity() {}\n\n;\nEntity.prototype.nodeType = ENTITY_NODE;\n\n_extends(Entity, Node);\n\nfunction EntityReference() {}\n\n;\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n\n_extends(EntityReference, Node);\n\nfunction DocumentFragment() {}\n\n;\nDocumentFragment.prototype.nodeName = \"#document-fragment\";\nDocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n\n_extends(DocumentFragment, Node);\n\nfunction ProcessingInstruction() {}\n\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n\n_extends(ProcessingInstruction, Node);\n\nfunction XMLSerializer() {}\n\nXMLSerializer.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n  return nodeSerializeToString.call(node, isHtml, nodeFilter);\n};\n\nNode.prototype.toString = nodeSerializeToString;\n\nfunction nodeSerializeToString(isHtml, nodeFilter) {\n  var buf = [];\n  var refNode = this.nodeType == 9 && this.documentElement || this;\n  var prefix = refNode.prefix;\n  var uri = refNode.namespaceURI;\n\n  if (uri && prefix == null) {\n    //console.log(prefix)\n    var prefix = refNode.lookupPrefix(uri);\n\n    if (prefix == null) {\n      //isHTML = true;\n      var visibleNamespaces = [{\n        namespace: uri,\n        prefix: null\n      } //{namespace:uri,prefix:''}\n      ];\n    }\n  }\n\n  serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces); //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\n  return buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n  var prefix = node.prefix || '';\n  var uri = node.namespaceURI; // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n  // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n  // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n  // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n  // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n  // > [...] Furthermore, the attribute value [...] must not be an empty string.\n  // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\n  if (!uri) {\n    return false;\n  }\n\n  if (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n    return false;\n  }\n\n  var i = visibleNamespaces.length;\n\n  while (i--) {\n    var ns = visibleNamespaces[i]; // get namespace prefix\n\n    if (ns.prefix === prefix) {\n      return ns.namespace !== uri;\n    }\n  }\n\n  return true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml/#CleanAttrVals\n * @see https://www.w3.org/TR/xml/#NT-AttValue\n */\n\n\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n  buf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"]/g, _xmlEncoder), '\"');\n}\n\nfunction serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n  if (!visibleNamespaces) {\n    visibleNamespaces = [];\n  }\n\n  if (nodeFilter) {\n    node = nodeFilter(node);\n\n    if (node) {\n      if (typeof node == 'string') {\n        buf.push(node);\n        return;\n      }\n    } else {\n      return;\n    } //buf.sort.apply(attrs, attributeSorter);\n\n  }\n\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n      var attrs = node.attributes;\n      var len = attrs.length;\n      var child = node.firstChild;\n      var nodeName = node.tagName;\n      isHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML;\n      var prefixedNodeName = nodeName;\n\n      if (!isHTML && !node.prefix && node.namespaceURI) {\n        var defaultNS; // lookup current default ns from `xmlns` attribute\n\n        for (var ai = 0; ai < attrs.length; ai++) {\n          if (attrs.item(ai).name === 'xmlns') {\n            defaultNS = attrs.item(ai).value;\n            break;\n          }\n        }\n\n        if (!defaultNS) {\n          // lookup current default ns in visibleNamespaces\n          for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n            var namespace = visibleNamespaces[nsi];\n\n            if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n              defaultNS = namespace.namespace;\n              break;\n            }\n          }\n        }\n\n        if (defaultNS !== node.namespaceURI) {\n          for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n            var namespace = visibleNamespaces[nsi];\n\n            if (namespace.namespace === node.namespaceURI) {\n              if (namespace.prefix) {\n                prefixedNodeName = namespace.prefix + ':' + nodeName;\n              }\n\n              break;\n            }\n          }\n        }\n      }\n\n      buf.push('<', prefixedNodeName);\n\n      for (var i = 0; i < len; i++) {\n        // add namespaces for attributes\n        var attr = attrs.item(i);\n\n        if (attr.prefix == 'xmlns') {\n          visibleNamespaces.push({\n            prefix: attr.localName,\n            namespace: attr.value\n          });\n        } else if (attr.nodeName == 'xmlns') {\n          visibleNamespaces.push({\n            prefix: '',\n            namespace: attr.value\n          });\n        }\n      }\n\n      for (var i = 0; i < len; i++) {\n        var attr = attrs.item(i);\n\n        if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n          var prefix = attr.prefix || '';\n          var uri = attr.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n\n        serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n      } // add namespace for current node\n\n\n      if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n        var prefix = node.prefix || '';\n        var uri = node.namespaceURI;\n        addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n        visibleNamespaces.push({\n          prefix: prefix,\n          namespace: uri\n        });\n      }\n\n      if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n        buf.push('>'); //if is cdata child node\n\n        if (isHTML && /^script$/i.test(nodeName)) {\n          while (child) {\n            if (child.data) {\n              buf.push(child.data);\n            } else {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n            }\n\n            child = child.nextSibling;\n          }\n        } else {\n          while (child) {\n            serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n            child = child.nextSibling;\n          }\n        }\n\n        buf.push('</', prefixedNodeName, '>');\n      } else {\n        buf.push('/>');\n      } // remove added visible namespaces\n      //visibleNamespaces.length = startVisibleNamespaces;\n\n\n      return;\n\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      var child = node.firstChild;\n\n      while (child) {\n        serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n        child = child.nextSibling;\n      }\n\n      return;\n\n    case ATTRIBUTE_NODE:\n      return addSerializedAttribute(buf, node.name, node.value);\n\n    case TEXT_NODE:\n      /**\n       * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n       * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n       * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n       * `&amp;` and `&lt;` respectively.\n       * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n       * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n       * when that string is not marking the end of a CDATA section.\n       *\n       * In the content of elements, character data is any string of characters\n       * which does not contain the start-delimiter of any markup\n       * and does not include the CDATA-section-close delimiter, `]]>`.\n       *\n       * @see https://www.w3.org/TR/xml/#NT-CharData\n       */\n      return buf.push(node.data.replace(/[<&]/g, _xmlEncoder).replace(/]]>/g, ']]&gt;'));\n\n    case CDATA_SECTION_NODE:\n      return buf.push('<![CDATA[', node.data, ']]>');\n\n    case COMMENT_NODE:\n      return buf.push(\"<!--\", node.data, \"-->\");\n\n    case DOCUMENT_TYPE_NODE:\n      var pubid = node.publicId;\n      var sysid = node.systemId;\n      buf.push('<!DOCTYPE ', node.name);\n\n      if (pubid) {\n        buf.push(' PUBLIC ', pubid);\n\n        if (sysid && sysid != '.') {\n          buf.push(' ', sysid);\n        }\n\n        buf.push('>');\n      } else if (sysid && sysid != '.') {\n        buf.push(' SYSTEM ', sysid, '>');\n      } else {\n        var sub = node.internalSubset;\n\n        if (sub) {\n          buf.push(\" [\", sub, \"]\");\n        }\n\n        buf.push(\">\");\n      }\n\n      return;\n\n    case PROCESSING_INSTRUCTION_NODE:\n      return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n\n    case ENTITY_REFERENCE_NODE:\n      return buf.push('&', node.nodeName, ';');\n    //case ENTITY_NODE:\n    //case NOTATION_NODE:\n\n    default:\n      buf.push('??', node.nodeName);\n  }\n}\n\nfunction _importNode(doc, node, deep) {\n  var node2;\n\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n      node2 = node.cloneNode(false);\n      node2.ownerDocument = doc;\n    //var attrs = node2.attributes;\n    //var len = attrs.length;\n    //for(var i=0;i<len;i++){\n    //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n    //}\n\n    case DOCUMENT_FRAGMENT_NODE:\n      break;\n\n    case ATTRIBUTE_NODE:\n      deep = true;\n      break;\n    //case ENTITY_REFERENCE_NODE:\n    //case PROCESSING_INSTRUCTION_NODE:\n    ////case TEXT_NODE:\n    //case CDATA_SECTION_NODE:\n    //case COMMENT_NODE:\n    //\tdeep = false;\n    //\tbreak;\n    //case DOCUMENT_NODE:\n    //case DOCUMENT_TYPE_NODE:\n    //cannot be imported.\n    //case ENTITY_NODE:\n    //case NOTATION_NODE：\n    //can not hit in level3\n    //default:throw e;\n  }\n\n  if (!node2) {\n    node2 = node.cloneNode(false); //false\n  }\n\n  node2.ownerDocument = doc;\n  node2.parentNode = null;\n\n  if (deep) {\n    var child = node.firstChild;\n\n    while (child) {\n      node2.appendChild(_importNode(doc, child, deep));\n      child = child.nextSibling;\n    }\n  }\n\n  return node2;\n} //\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\n\n\nfunction _cloneNode(doc, node, deep) {\n  var node2 = new node.constructor();\n\n  for (var n in node) {\n    if (Object.prototype.hasOwnProperty.call(node, n)) {\n      var v = node[n];\n\n      if (typeof v != \"object\") {\n        if (v != node2[n]) {\n          node2[n] = v;\n        }\n      }\n    }\n  }\n\n  if (node.childNodes) {\n    node2.childNodes = new NodeList();\n  }\n\n  node2.ownerDocument = doc;\n\n  switch (node2.nodeType) {\n    case ELEMENT_NODE:\n      var attrs = node.attributes;\n      var attrs2 = node2.attributes = new NamedNodeMap();\n      var len = attrs.length;\n      attrs2._ownerElement = node2;\n\n      for (var i = 0; i < len; i++) {\n        node2.setAttributeNode(_cloneNode(doc, attrs.item(i), true));\n      }\n\n      break;\n      ;\n\n    case ATTRIBUTE_NODE:\n      deep = true;\n  }\n\n  if (deep) {\n    var child = node.firstChild;\n\n    while (child) {\n      node2.appendChild(_cloneNode(doc, child, deep));\n      child = child.nextSibling;\n    }\n  }\n\n  return node2;\n}\n\nfunction __set__(object, key, value) {\n  object[key] = value;\n} //do dynamic\n\n\ntry {\n  if (Object.defineProperty) {\n    var getTextContent = function getTextContent(node) {\n      switch (node.nodeType) {\n        case ELEMENT_NODE:\n        case DOCUMENT_FRAGMENT_NODE:\n          var buf = [];\n          node = node.firstChild;\n\n          while (node) {\n            if (node.nodeType !== 7 && node.nodeType !== 8) {\n              buf.push(getTextContent(node));\n            }\n\n            node = node.nextSibling;\n          }\n\n          return buf.join('');\n\n        default:\n          return node.nodeValue;\n      }\n    };\n\n    Object.defineProperty(LiveNodeList.prototype, 'length', {\n      get: function get() {\n        _updateLiveList(this);\n\n        return this.$$length;\n      }\n    });\n    Object.defineProperty(Node.prototype, 'textContent', {\n      get: function get() {\n        return getTextContent(this);\n      },\n      set: function set(data) {\n        switch (this.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            while (this.firstChild) {\n              this.removeChild(this.firstChild);\n            }\n\n            if (data || String(data)) {\n              this.appendChild(this.ownerDocument.createTextNode(data));\n            }\n\n            break;\n\n          default:\n            this.data = data;\n            this.value = data;\n            this.nodeValue = data;\n        }\n      }\n    });\n\n    __set__ = function __set__(object, key, value) {\n      //console.log(value)\n      object['$$' + key] = value;\n    };\n  }\n} catch (e) {//ie8\n} //if(typeof require == 'function'){\n\n\nexports.DocumentType = DocumentType;\nexports.DOMException = DOMException;\nexports.DOMImplementation = DOMImplementation;\nexports.Element = Element;\nexports.Node = Node;\nexports.NodeList = NodeList;\nexports.XMLSerializer = XMLSerializer; //}","map":{"version":3,"sources":["/home/multiplier/Documentos/Gabriel Brelaz/painel-angular-gabrielbrelaz.com/node_modules/@xmldom/xmldom/lib/dom.js"],"names":["conventions","require","find","NAMESPACE","notEmptyString","input","splitOnASCIIWhitespace","split","filter","orderedSetReducer","current","element","hasOwnProperty","toOrderedSet","list","Object","keys","reduce","arrayIncludes","indexOf","copy","src","dest","p","prototype","call","_extends","Class","Super","pt","t","constructor","console","error","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","code","message","Error","captureStackTrace","NodeList","length","item","index","toString","isHTML","nodeFilter","buf","i","serializeToString","join","predicate","Array","LiveNodeList","node","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","el","newAttr","oldAttr","ownerElement","doc","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","attr","lastIndex","tagName","getNamedItem","key","nodeName","setNamedItem","_ownerElement","setNamedItemNS","getNamedItemNS","namespaceURI","localName","removeNamedItem","removeNamedItemNS","DOMImplementation","hasFeature","feature","version","createDocument","qualifiedName","doctype","Document","implementation","childNodes","appendChild","root","createElementNS","createDocumentType","publicId","systemId","DocumentType","name","Node","firstChild","lastChild","previousSibling","nextSibling","attributes","parentNode","nodeValue","prefix","insertBefore","newChild","refChild","_insertBefore","replaceChild","oldChild","assertPreReplacementValidityInDocument","removeChild","_removeChild","hasChildNodes","cloneNode","deep","normalize","child","next","nodeType","appendData","data","isSupported","hasAttributes","lookupPrefix","map","_nsMap","n","lookupNamespaceURI","isDefaultNamespace","_xmlEncoder","c","charCodeAt","_visitNode","callback","ns","XMLNS","value","remove","_onUpdateChild","cs","previous","hasValidParentNodeType","hasInsertableNodeType","isElementNode","isTextNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","hasDoctypeChildThatIsNotChild","_inDocumentAssertion","cp","newFirst","newLast","pre","_appendSingleChild","documentElement","importNode","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","push","createElement","Element","attrs","createDocumentFragment","DocumentFragment","createTextNode","Text","createComment","Comment","createCDATASection","CDATASection","createProcessingInstruction","target","ProcessingInstruction","createAttribute","Attr","specified","createEntityReference","EntityReference","pl","createAttributeNS","hasAttribute","getAttributeNode","setAttribute","setAttributeNode","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","CharacterData","substringData","offset","count","substring","text","insertData","replaceData","deleteData","start","end","splitText","newText","newNode","Notation","Entity","XMLSerializer","isHtml","nodeSerializeToString","refNode","uri","visibleNamespaces","namespace","needNamespaceDefine","XML","addSerializedAttribute","replace","len","prefixedNodeName","defaultNS","ai","nsi","test","slice","pubid","sysid","sub","internalSubset","node2","v","attrs2","object","defineProperty","getTextContent","get","$$length","set","String","e","exports"],"mappings":"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","sourcesContent":["var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n\t\t\t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n\t\t\t\t\t\treturn map[prefix] ;\n\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\nfunction _onUpdateChild(doc,el,newChild){\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif(newChild){\n\t\t\tcs[cs.length++] = newChild;\n\t\t}else{\n\t\t\t//console.log(1)\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile(child){\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild =child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * attributes;\n * children;\n *\n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\nfunction _removeChild(parentNode,child){\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif(previous){\n\t\tprevious.nextSibling = next;\n\t}else{\n\t\tparentNode.firstChild = next\n\t}\n\tif(next){\n\t\tnext.previousSibling = previous;\n\t}else{\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\nfunction _appendSingleChild(parentNode,newChild){\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t}else{\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml/#CleanAttrVals\n * @see https://www.w3.org/TR/xml/#NT-AttValue\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"]/g,_xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&]/g,_xmlEncoder)\n\t\t\t.replace(/]]>/g, ']]&gt;')\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n"]},"metadata":{},"sourceType":"script"}