{"version":3,"file":"firebase-base.strategy.js","sourceRoot":"","sources":["../../../../../../.ng_build/firebase-auth/strategies/base/firebase-base.strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Observable, of as observableOf, from } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { NbAuthResult, NbAuthIllegalTokenError, NbAuthStrategy } from '@nebular/auth';\n\nimport firebase from 'firebase/app';\nimport UserCredential = firebase.auth.UserCredential;\n\n\n@Injectable()\nexport abstract class NbFirebaseBaseStrategy extends NbAuthStrategy {\n\n  constructor(protected afAuth: AngularFireAuth) {\n    super();\n  }\n\n  logout(): Observable<NbAuthResult> {\n    const module = 'logout';\n    return from(this.afAuth.signOut())\n      .pipe(\n        map(() => {\n          return new NbAuthResult(\n            true,\n            null,\n            this.getOption(`${module}.redirect.success`),\n            [],\n            this.getOption(`${module}.defaultMessages`),\n          )\n        }),\n        catchError((error) => this.processFailure(error, module)),\n      );\n  }\n\n  register(data?: any): Observable<NbAuthResult> {\n    throw new Error(`'register' is not supported by '${this.constructor.name}', use 'authenticate'.`);\n  }\n\n  requestPassword(data?: any): Observable<NbAuthResult> {\n    throw new Error(`'requestPassword' is not supported by '${this.constructor.name}', use 'authenticate'.`);\n  }\n\n  resetPassword(data: any = {}): Observable<NbAuthResult> {\n    throw new Error(`'resetPassword' is not supported by '${this.constructor.name}', use 'authenticate'.`);\n  }\n\n  refreshToken(data: any = {}): Observable<NbAuthResult> {\n    throw new Error(`'refreshToken' is not supported by '${this.constructor.name}', use 'authenticate'.`);\n  }\n\n  protected processFailure(error: any, module: string): Observable<NbAuthResult> {\n    const errorMessages = [];\n\n    if (error instanceof NbAuthIllegalTokenError) {\n      errorMessages.push(error.message)\n    } else {\n      errorMessages.push(this.getOption('errors.getter')(module, error, this.options));\n    }\n\n    return observableOf(new NbAuthResult(\n      false,\n      error,\n      this.getOption(`${module}.redirect.failure`),\n      errorMessages,\n      [],\n    ));\n  }\n\n  protected processSuccess(res: UserCredential | null, module: string): Observable<NbAuthResult> {\n    return this.afAuth.idToken\n      .pipe(map(token => {\n        return new NbAuthResult(\n          true,\n          res,\n          this.getOption(`${module}.redirect.success`),\n          [],\n          this.getOption('messages.getter')(module, res, this.options),\n          this.createToken(token),\n        );\n      }));\n  }\n}\n"]}