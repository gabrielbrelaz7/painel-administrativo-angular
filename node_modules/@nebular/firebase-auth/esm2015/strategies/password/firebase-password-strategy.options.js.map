{"version":3,"file":"firebase-password-strategy.options.js","sourceRoot":"","sources":["../../../../../../.ng_build/firebase-auth/strategies/password/firebase-password-strategy.options.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EACL,iBAAiB,EACjB,cAAc,EACd,qBAAqB,GAItB,MAAM,eAAe,CAAC;AAEvB,MAAM,OAAO,iCAAkC,SAAQ,qBAAqB;IAA5E;;QACE,UAAK,GAAqB;YACxB,KAAK,EAAE,cAAc;SACtB,CAAC;QACF,aAAQ,GAAwC;YAC9C,QAAQ,EAAE;gBACR,OAAO,EAAE,GAAG;gBACZ,OAAO,EAAE,IAAI;aACd;YACD,aAAa,EAAE,CAAC,yCAAyC,CAAC;YAC1D,eAAe,EAAE,CAAC,wCAAwC,CAAC;SAC5D,CAAC;QACF,UAAK,GAAwC;YAC3C,QAAQ,EAAE;gBACR,OAAO,EAAE,GAAG;gBACZ,OAAO,EAAE,IAAI;aACd;YACD,aAAa,EAAE,CAAC,2DAA2D,CAAC;YAC5E,eAAe,EAAE,CAAC,uCAAuC,CAAC;SAC3D,CAAC;QACF,WAAM,GAAwC;YAC5C,QAAQ,EAAE;gBACR,OAAO,EAAE,GAAG;gBACZ,OAAO,EAAE,IAAI;aACd;YACD,aAAa,EAAE,CAAC,yCAAyC,CAAC;YAC1D,eAAe,EAAE,CAAC,wCAAwC,CAAC;SAC5D,CAAC;QACF,iBAAY,GAAwC;YAClD,QAAQ,EAAE;gBACR,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,IAAI;aACd;YACD,aAAa,EAAE,CAAC,yCAAyC,CAAC;YAC1D,eAAe,EAAE,CAAC,6CAA6C,CAAC;SACjE,CAAC;QACF,oBAAe,GAAwC;YACrD,QAAQ,EAAE;gBACR,OAAO,EAAE,GAAG;gBACZ,OAAO,EAAE,IAAI;aACd;YACD,aAAa,EAAE,CAAC,yCAAyC,CAAC;YAC1D,eAAe,EAAE,CAAC,2DAA2D,CAAC;SAC/E,CAAC;QACF,kBAAa,GAAwC;YACnD,QAAQ,EAAE;gBACR,OAAO,EAAE,GAAG;gBACZ,OAAO,EAAE,IAAI;aACd;YACD,aAAa,EAAE,CAAC,yCAAyC,CAAC;YAC1D,eAAe,EAAE,CAAC,8CAA8C,CAAC;SAClE,CAAC;QACF,WAAM,GAA+B;YACnC,GAAG,EAAE,SAAS;YACd,MAAM,EAAE,CAAC,MAAc,EAAE,GAAG,EAAE,OAA0C,EAAE,EAAE,CAAC,iBAAiB,CAC5F,GAAG,EACH,OAAO,CAAC,MAAM,CAAC,GAAG,EAClB,OAAO,CAAC,MAAM,CAAC,CAAC,aAAa,CAC9B;SACF,CAAC;QACF,aAAQ,GAA+B;YACrC,GAAG,EAAE,UAAU;YACf,MAAM,EAAE,CAAC,MAAc,EAAE,GAAG,EAAE,OAA0C,EAAE,EAAE,CAAC,iBAAiB,CAC5F,GAAG,CAAC,IAAI,EACR,OAAO,CAAC,QAAQ,CAAC,GAAG,EACpB,OAAO,CAAC,MAAM,CAAC,CAAC,eAAe,CAChC;SACF,CAAC;IACJ,CAAC;CAAA;AAED,2CAA2C;AAC3C,MAAM,CAAC,MAAM,+BAA+B,GAAsC,IAAI,iCAAiC,EAAE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  getDeepFromObject,\n  NbAuthJWTToken,\n  NbAuthStrategyOptions,\n  NbPasswordStrategyMessage,\n  NbPasswordStrategyModule,\n  NbStrategyToken,\n} from '@nebular/auth';\n\nexport class NbFirebasePasswordStrategyOptions extends NbAuthStrategyOptions {\n  token?: NbStrategyToken = {\n    class: NbAuthJWTToken,\n  };\n  register?: boolean | NbPasswordStrategyModule = {\n    redirect: {\n      success: '/',\n      failure: null,\n    },\n    defaultErrors: ['Something went wrong, please try again.'],\n    defaultMessages: ['You have been successfully registered.'],\n  };\n  login?: boolean | NbPasswordStrategyModule = {\n    redirect: {\n      success: '/',\n      failure: null,\n    },\n    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n    defaultMessages: ['You have been successfully logged in.'],\n  };\n  logout?: boolean | NbPasswordStrategyModule = {\n    redirect: {\n      success: '/',\n      failure: null,\n    },\n    defaultErrors: ['Something went wrong, please try again.'],\n    defaultMessages: ['You have been successfully logged out.'],\n  };\n  refreshToken?: boolean | NbPasswordStrategyModule = {\n    redirect: {\n      success: null,\n      failure: null,\n    },\n    defaultErrors: ['Something went wrong, please try again.'],\n    defaultMessages: ['Your token has been successfully refreshed.'],\n  };\n  requestPassword?: boolean | NbPasswordStrategyModule = {\n    redirect: {\n      success: '/',\n      failure: null,\n    },\n    defaultErrors: ['Something went wrong, please try again.'],\n    defaultMessages: ['Reset password instructions have been sent to your email.'],\n  };\n  resetPassword?: boolean | NbPasswordStrategyModule = {\n    redirect: {\n      success: '/',\n      failure: null,\n    },\n    defaultErrors: ['Something went wrong, please try again.'],\n    defaultMessages: ['Your password has been successfully changed.'],\n  };\n  errors?: NbPasswordStrategyMessage = {\n    key: 'message',\n    getter: (module: string, res, options: NbFirebasePasswordStrategyOptions) => getDeepFromObject(\n      res,\n      options.errors.key,\n      options[module].defaultErrors,\n    ),\n  };\n  messages?: NbPasswordStrategyMessage = {\n    key: 'messages',\n    getter: (module: string, res, options: NbFirebasePasswordStrategyOptions) => getDeepFromObject(\n      res.body,\n      options.messages.key,\n      options[module].defaultMessages,\n    ),\n  };\n}\n\n// tslint:disable-next-line:max-line-length\nexport const firebasePasswordStrategyOptions: NbFirebasePasswordStrategyOptions = new NbFirebasePasswordStrategyOptions();\n"]}