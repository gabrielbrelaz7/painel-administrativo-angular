(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/core'), require('@nebular/theme'), require('date-fns/parse'), require('date-fns/format'), require('date-fns/getWeek')) :
	typeof define === 'function' && define.amd ? define(['exports', 'tslib', '@angular/core', '@nebular/theme', 'date-fns/parse', 'date-fns/format', 'date-fns/getWeek'], factory) :
	(factory((global.nb = global.nb || {}, global.nb['date-fns'] = global.nb['date-fns'] || {}),global.tslib,global.ng.core,global.nb.theme,global['date-fns'].parse,global['date-fns'].format,global['date-fns'].getWeek));
}(this, (function (exports,tslib,_angular_core,_nebular_theme,parse,formatDate,getWeek) { 'use strict';

parse = parse && 'default' in parse ? parse['default'] : parse;
formatDate = formatDate && 'default' in formatDate ? formatDate['default'] : formatDate;
getWeek = getWeek && 'default' in getWeek ? getWeek['default'] : getWeek;

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
var NbDateFnsDateService = /** @class */ (function (_super) {
    tslib.__extends(NbDateFnsDateService, _super);
    function NbDateFnsDateService(locale, options) {
        var _this = _super.call(this, locale) || this;
        _this.options = options || {};
        return _this;
    }
    NbDateFnsDateService.prototype.format = function (date, format) {
        if (date) {
            return formatDate(date, format || this.options.format, this.options.formatOptions);
        }
        return '';
    };
    NbDateFnsDateService.prototype.parse = function (date, format) {
        return parse(date, format || this.options.format, new Date(), this.options.parseOptions);
    };
    NbDateFnsDateService.prototype.getId = function () {
        return 'date-fns';
    };
    NbDateFnsDateService.prototype.getWeekNumber = function (date) {
        return getWeek(date, this.options.getWeekOptions);
    };
    NbDateFnsDateService.prototype.getDateFormat = function () {
        return 'YYYY-MM-dd';
    };
    NbDateFnsDateService.decorators = [
        { type: _angular_core.Injectable }
    ];
    NbDateFnsDateService.ctorParameters = function () { return [
        { type: String, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [_nebular_theme.NB_DATE_SERVICE_OPTIONS,] }] }
    ]; };
    return NbDateFnsDateService;
}(_nebular_theme.NbNativeDateService));

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
var dateFnsServiceProvider = { provide: _nebular_theme.NbDateService, useClass: NbDateFnsDateService };
var NbDateFnsDateModule = /** @class */ (function () {
    function NbDateFnsDateModule() {
    }
    NbDateFnsDateModule.forRoot = function (options) {
        return {
            ngModule: NbDateFnsDateModule,
            providers: [
                dateFnsServiceProvider,
                { provide: _nebular_theme.NB_DATE_SERVICE_OPTIONS, useValue: options },
            ],
        };
    };
    NbDateFnsDateModule.forChild = function (options) {
        return {
            ngModule: NbDateFnsDateModule,
            providers: [
                dateFnsServiceProvider,
                { provide: _nebular_theme.NB_DATE_SERVICE_OPTIONS, useValue: options },
            ],
        };
    };
    NbDateFnsDateModule.decorators = [
        { type: _angular_core.NgModule, args: [{
                    providers: [dateFnsServiceProvider],
                },] }
    ];
    return NbDateFnsDateModule;
}());

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */

/**
 * Generated bundle index. Do not edit.
 */

exports.NbDateFnsDateService = NbDateFnsDateService;
exports.NbDateFnsDateModule = NbDateFnsDateModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
