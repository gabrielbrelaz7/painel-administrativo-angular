{"version":3,"file":"date-fns-date.service.js","sourceRoot":"","sources":["../../../../../.ng_build/date-fns/services/date-fns-date.service.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAExE,OAAO,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AAE9E,OAAO,EAAE,OAAO,IAAI,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAClD,OAAO,EAAE,OAAO,IAAI,UAAU,EAAE,MAAM,iBAAiB,CAAC;AACxD,OAAO,EAAE,OAAO,IAAI,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAUtD,MAAM,OAAO,oBAAqB,SAAQ,mBAAmB;IAG3D,YACqB,MAAc,EACY,OAAO;QAEpD,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,IAAU,EAAE,MAAc;QAC/B,IAAI,IAAI,EAAE;YACR,OAAO,UAAU,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SACpF;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,IAAY,EAAE,MAAc;QAChC,OAAO,KAAK,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC3F,CAAC;IAED,KAAK;QACH,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,aAAa,CAAC,IAAU;QACtB,OAAO,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACpD,CAAC;IAED,aAAa;QACX,OAAO,YAAY,CAAC;IACtB,CAAC;;;YAlCF,UAAU;;;yCAKN,MAAM,SAAC,SAAS;4CAChB,QAAQ,YAAI,MAAM,SAAC,uBAAuB","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Inject, Injectable, LOCALE_ID, Optional } from '@angular/core';\n\nimport { NB_DATE_SERVICE_OPTIONS, NbNativeDateService } from '@nebular/theme';\n\nimport { default as parse } from 'date-fns/parse';\nimport { default as formatDate } from 'date-fns/format';\nimport { default as getWeek } from 'date-fns/getWeek';\n\nexport interface NbDateFnsOptions {\n  format: string;\n  parseOptions: {},\n  formatOptions: {},\n  getWeekOptions: {},\n}\n\n@Injectable()\nexport class NbDateFnsDateService extends NbNativeDateService {\n  protected options: Partial<NbDateFnsOptions>;\n\n  constructor(\n    @Inject(LOCALE_ID) locale: string,\n    @Optional() @Inject(NB_DATE_SERVICE_OPTIONS) options,\n  ) {\n    super(locale);\n    this.options = options || {};\n  }\n\n  format(date: Date, format: string): string {\n    if (date) {\n      return formatDate(date, format || this.options.format, this.options.formatOptions);\n    }\n\n    return '';\n  }\n\n  parse(date: string, format: string): Date {\n    return parse(date, format || this.options.format, new Date(), this.options.parseOptions);\n  }\n\n  getId(): string {\n    return 'date-fns';\n  }\n\n  getWeekNumber(date: Date): number {\n    return getWeek(date, this.options.getWeekOptions);\n  }\n\n  getDateFormat(): string {\n    return 'YYYY-MM-dd';\n  }\n}\n"]}