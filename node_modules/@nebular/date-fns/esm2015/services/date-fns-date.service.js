/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { Inject, Injectable, LOCALE_ID, Optional } from '@angular/core';
import { NB_DATE_SERVICE_OPTIONS, NbNativeDateService } from '@nebular/theme';
import { default as parse } from 'date-fns/parse';
import { default as formatDate } from 'date-fns/format';
import { default as getWeek } from 'date-fns/getWeek';
export class NbDateFnsDateService extends NbNativeDateService {
    constructor(locale, options) {
        super(locale);
        this.options = options || {};
    }
    format(date, format) {
        if (date) {
            return formatDate(date, format || this.options.format, this.options.formatOptions);
        }
        return '';
    }
    parse(date, format) {
        return parse(date, format || this.options.format, new Date(), this.options.parseOptions);
    }
    getId() {
        return 'date-fns';
    }
    getWeekNumber(date) {
        return getWeek(date, this.options.getWeekOptions);
    }
    getDateFormat() {
        return 'YYYY-MM-dd';
    }
}
NbDateFnsDateService.decorators = [
    { type: Injectable }
];
NbDateFnsDateService.ctorParameters = () => [
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NB_DATE_SERVICE_OPTIONS,] }] }
];
//# sourceMappingURL=date-fns-date.service.js.map